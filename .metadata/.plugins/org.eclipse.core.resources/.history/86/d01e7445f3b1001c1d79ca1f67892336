package com.Jordan.GraphLibrary;

import java.util.List;
import java.util.Map;
import java.util.Optional;


public interface GraphInterface<T> {
	
	//void addEdge(ListT lists, T source, T destination, boolean bidirectional);
	
	void addEdge(T source, T destination, boolean bidirectional);
	
	//ListT addEdge(ListT lists, T source, T destination, boolean bidirectional);
	
	//List<ListT> getAllPaths(ListT vertices, T start, T end);
	
	//ListT add(ListT lists, T v);
	
	//void add(T s);
	
	List<List<T>> getAllPaths(Map<T, List<T>> map, T start, T end);

	void addVertex(T s);
}

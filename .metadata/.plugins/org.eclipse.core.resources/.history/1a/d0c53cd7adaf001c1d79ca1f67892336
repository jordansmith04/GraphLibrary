package com.Jordan.GraphLibrary;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ThreadLocalRandom;

public class App 
{
	public static Graph graphy = new Graph();
	
	public static String performManipluationOnGraph() {
		
		//Create new / get adjacency list map
		Map<Vertex, List<Vertex>> adjacencyList = graphy.getAdjacencyLists();
		
		//Insert some vertices
		String[] names = {"Fred", "Wilmer", "Charlie", "Vanessa", "Bart"};
		int counter = 0;
		for(String name : names) {
			graphy.setAdjacencyLists(graphy.addVertex(graphy.getAdjacencyLists(), new Vertex(0, name)));
			counter += 1;
		}
		
		//insert some edges
		Set<Vertex>  adjacencyListSet = adjacencyList.keySet();
		Vertex[] keyArray = (Vertex[]) adjacencyListSet.toArray();
		for(int i = 0; i < adjacencyListSet.size() * 2; i++) {
			int randomNum1 = ThreadLocalRandom.current().nextInt(0, adjacencyListSet.size() + 1);
			int randomNum2 = ThreadLocalRandom.current().nextInt(0, adjacencyListSet.size() + 1);
			while(randomNum1 == randomNum2)
				randomNum2 = ThreadLocalRandom.current().nextInt(0, adjacencyListSet.size() + 1);
			graphy.setAdjacencyLists(graphy.addEdge(adjacencyList, keyArray[randomNum1], keyArray[randomNum2], false));
		}
		
		return graphy.toString(graphy.getAdjacencyLists());
	}
	
	
	
    public static void main( String[] args )
    {
        System.out.println(performManipluationOnGraph());
    }
}
